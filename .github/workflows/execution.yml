name: Run Execution Tests [Latest Anaconda]
on:
  schedule:
    # UTC 22:00 is early morning in Australia
    - cron:  '0 22 * * *'
jobs:
  execution-tests-linux:
    name: Execution Tests (${{ matrix.python-version }}, ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest"]
        python-version: ["3.11"]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}
      - name: Install latex dependencies
        run: |
          sudo apt-get -qq update
          sudo apt-get install -y     \
            texlive-latex-recommended \
            texlive-latex-extra       \
            texlive-fonts-recommended \
            texlive-fonts-extra       \
            texlive-xetex             \
            latexmk                   \
            xindy                     \
            dvipng                    \
            cm-super      
      - name: Install Anaconda + Dependencies
        shell: bash -l {0}
        run: |
          conda install anaconda
          pip install jupyter-book sphinx-multitoc-numbering quantecon-book-theme sphinxext-rediraffe sphinx-tojupyter sphinxcontrib-youtube sphinx-exercise prettytable
      - name: Build Lectures (+ Execution Checks)
        shell: bash -l {0}
        run: jb build lectures --path-output=./ -W --keep-going
      - name: Upload Execution Reports
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: execution-reports
          path: _build/html/reports

  execution-tests-osx:
    name: Execution Tests (${{ matrix.python-version }}, ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["macos-latest"]
        python-version: ["3.11"]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}
      - name: Install latex dependencies
        run: |
          brew install texlive
      - name: Install Anaconda + Dependencies
        shell: bash -l {0}
        run: |
          conda install anaconda
          pip install jupyter-book sphinx-multitoc-numbering quantecon-book-theme sphinxext-rediraffe sphinx-tojupyter sphinxcontrib-youtube sphinx-exercise prettytable
      - name: Build Lectures (+ Execution Checks)
        shell: bash -l {0}
        run: jb build lectures --path-output=./ -W --keep-going
      - name: Upload Execution Reports
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: execution-reports
          path: _build/html/reports
  # execution-tests-win:
  #   name: Execution Tests (${{ matrix.python-version }}, ${{ matrix.os }})
  #   runs-on: ${{ matrix.os }}
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       os: ["windows-latest"]
  #       python-version: ["3.11"]
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #     - uses: conda-incubator/setup-miniconda@v2
  #       with:
  #         auto-update-conda: true
  #         python-version: ${{ matrix.python-version }}
  #     - name: Install Anaconda + Dependencies
  #       shell: powershell
  #       run: |
  #         conda install anaconda
  #         pip install jupyter-book
  #         pip install jupyter-book sphinx-multitoc-numbering quantecon-book-theme sphinxext-rediraffe sphinx_tojupyter
  #     - name: Build Lectures (+ Execution Checks)
  #       shell: powershell
  #       run: jb build lectures --path-output=./ -W --keep-going
  #     - name: Upload Execution Reports
  #       uses: actions/upload-artifact@v2
  #       if: failure()
  #       with:
  #         name: execution-reports
  #         path: _build/html/reports
