name: Build & Publish to GH Pages
on:
  push:
    tags:
      - 'publish*'
jobs:
  deploy-runner:
    runs-on: ubuntu-latest
    steps:
      - uses: iterative/setup-cml@v1
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Deploy runner on EC2
        env:
          REPO_TOKEN: ${{ secrets.QUANTECON_SERVICES_PAT }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          cml runner launch \
              --cloud=aws \
              --cloud-region=us-west-2 \
              --cloud-type=p3.2xlarge \
              --labels=cml-gpu \
              --cloud-hdd-size=40
  publish:
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
    needs: deploy-runner
    runs-on: [self-hosted, cml-gpu]
    container:
      image: docker://mmcky/quantecon-lecture-python:cuda-12.1.0-anaconda-2023-09-py311-c
      options: --gpus all
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Git (required to commit notebooks)
        shell: bash -l {0}
        run: apt-get install -y git
      - name: Check nvidia drivers
        shell: bash -l {0}
        run: |
          nvidia-smi
      - name: Display Conda Environment Versions
        shell: bash -l {0}
        run: conda list
      - name: Display Pip Versions
        shell: bash -l {0}
        run: pip list
      # Download Build Cache from cache.yml
      - name: Download "build" folder (cache)
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: cache.yml
          branch: main
          name: build-cache
          path: _build
      # Build Assets (Download Notebooks, PDF via LaTeX)
      - name: Build PDF from LaTeX
        shell: bash -l {0}
        run: |
          jb build lectures --builder pdflatex --path-output ./ -n -W --keep-going
      - name: Copy LaTeX PDF for GH-PAGES
        shell: bash -l {0}
        run: |
          mkdir -p _build/html/_pdf
          cp -u _build/latex/*.pdf _build/html/_pdf
      - name: Build Download Notebooks (sphinx-tojupyter)
        shell: bash -l {0}
        run: |
          jb build lectures --path-output ./ --builder=custom --custom-builder=jupyter -n -W --keep-going
          zip -r download-notebooks.zip _build/jupyter
      - uses: actions/upload-artifact@v2
        with:
          name: download-notebooks
          path: download-notebooks.zip
      - name: Copy Download Notebooks for GH-PAGES
        shell: bash -l {0}
        run: |
          mkdir -p _build/html/_notebooks
          cp -u _build/jupyter/*.ipynb _build/html/_notebooks
      # Final Build of HTML (with assets)
      - name: Build HTML
        shell: bash -l {0}
        run: |
          jb build lectures --path-output ./ -n -W --keep-going
      - name: Deploy website to gh-pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: _build/html/
          cname: python.quantecon.org
      - name: Prepare lecture-python.notebooks sync
        shell: bash -l {0}
        run: |
          mkdir -p _build/lecture-python.notebooks
          cp -a _notebook_repo/. _build/lecture-python.notebooks
          cp _build/jupyter/*.ipynb _build/lecture-python.notebooks
          ls -a _build/lecture-python.notebooks
      - name: Commit notebooks to lecture-python.notebooks
        shell: bash -l {0}
        env:
          QE_SERVICES_PAT: ${{ secrets.QUANTECON_SERVICES_PAT }}
        run: |
          git clone https://quantecon-services:$QE_SERVICES_PAT@github.com/quantecon/lecture-python.notebooks

          cp _build/lecture-python.notebooks/*.ipynb lecture-python.notebooks

          cd lecture-python.notebooks
          git config user.name "QuantEcon Services"
          git config user.email "admin@quantecon.org"
          git add *.ipynb
          git commit -m "auto publishing updates to notebooks"
          git push origin master
