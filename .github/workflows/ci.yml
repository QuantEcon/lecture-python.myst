name: Build Project [using jupyter-book]
on: 
  pull_request:
  workflow_dispatch:
    inputs:
      preview_page:
        description: 'Specific page to preview (e.g., aiyagari.html)'
        required: false
        type: string
jobs:
  preview:
    runs-on: "runs-on=${{ github.run_id }}/family=g4dn.2xlarge/image=quantecon_ubuntu2404/disk=large"
    steps:
      - uses: actions/checkout@v5
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Setup Anaconda
        uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          auto-activate-base: true
          miniconda-version: 'latest'
          python-version: "3.13"
          environment-file: environment.yml
          activate-environment: quantecon
      - name: Install JAX, Numpyro, PyTorch
        shell: bash -l {0}
        run: |
          pip install --pre torch torchvision torchaudio --index-url https://download.pytorch.org/whl/nightly/cu128
          pip install pyro-ppl
          pip install --upgrade "jax[cuda12-local]==0.6.2"
          pip install numpyro pyro-ppl
          python scripts/test-jax-install.py
      - name: Check nvidia Drivers
        shell: bash -l {0}
        run: nvidia-smi
      - name: Display Conda Environment Versions
        shell: bash -l {0}
        run: conda list
      - name: Display Pip Versions
        shell: bash -l {0}
        run: pip list
      - name: Download "build" folder (cache)
        uses: dawidd6/action-download-artifact@v11
        with:
          workflow: cache.yml
          branch: main
          name: build-cache
          path: _build
      # Build Assets (Download Notebooks and PDF via LaTeX)
      - name: Build Download Notebooks (sphinx-tojupyter)
        shell: bash -l {0}
        run: |
          jb build lectures -n -W --keep-going --path-output ./ --builder=custom --custom-builder=jupyter
          mkdir -p _build/html/_notebooks
          cp -u _build/jupyter/*.ipynb _build/html/_notebooks
      - name: Upload Execution Reports (Download Notebooks)
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: execution-reports-notebooks
          path: _build/jupyter/reports
      - name: Build PDF from LaTeX
        shell: bash -l {0}
        run: |
          jb build lectures --builder pdflatex --path-output ./ -W --keep-going
          mkdir -p _build/html/_pdf
          cp -u _build/latex/*.pdf _build/html/_pdf
      - name: Upload Execution Reports (LaTeX)
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: execution-reports
          path: _build/latex/reports
      # Final Build of HTML
      - name: Build HTML
        shell: bash -l {0}
        run: |
          jb build lectures --path-output ./ -n -W --keep-going
      - name: Upload Execution Reports (HTML)
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: execution-reports
          path: _build/html/reports
      - name: Install Node.js and Netlify CLI
        shell: bash -l {0}
        run: |
          # Install Node.js via system package manager since conda-forge doesn't have npm
          sudo apt-get update
          sudo apt-get install -y nodejs npm
          sudo npm install -g netlify-cli
      - name: Detect Changed Lecture Files
        id: detect-changes
        shell: bash -l {0}
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            echo "Detecting changed lecture files..."
            
            # Get changed files in the lectures directory
            changed_files=$(git diff --name-only ${{ github.event.pull_request.base.sha }}..${{ github.event.pull_request.head.sha }} | grep '^lectures/.*\.md$' | grep -v '^lectures/_' || true)
            
            if [ ! -z "$changed_files" ]; then
              echo "Changed lecture files:"
              echo "$changed_files"
              
              # Convert .md files to .html and create preview URLs
              preview_urls=""
              for file in $changed_files; do
                # Extract filename without path and extension
                basename=$(basename "$file" .md)
                html_file="${basename}.html"
                preview_urls="${preview_urls}https://deploy-preview-${{ github.event.pull_request.number }}--sunny-cactus-210e3e.netlify.app/${html_file}\n"
              done
              
              echo "preview_urls<<EOF" >> $GITHUB_OUTPUT
              echo -e "$preview_urls" >> $GITHUB_OUTPUT
              echo "EOF" >> $GITHUB_OUTPUT
              
              echo "changed_files<<EOF" >> $GITHUB_OUTPUT
              echo "$changed_files" >> $GITHUB_OUTPUT
              echo "EOF" >> $GITHUB_OUTPUT
            else
              echo "No lecture files changed"
              echo "preview_urls=" >> $GITHUB_OUTPUT
              echo "changed_files=" >> $GITHUB_OUTPUT
            fi
          else
            echo "Not a PR, skipping change detection"
            echo "preview_urls=" >> $GITHUB_OUTPUT
            echo "changed_files=" >> $GITHUB_OUTPUT
          fi
      - name: Preview Deploy to Netlify
        shell: bash -l {0}
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            # Construct deployment message with preview URLs
            deploy_message="Preview Deploy from GitHub Actions PR #${{ github.event.pull_request.number }} (commit: ${{ github.sha }})"
            
            # Add manual preview page if specified
            if [ ! -z "${{ github.event.inputs.preview_page }}" ]; then
              deploy_message="${deploy_message}\n\n🎯 Manual Preview Page: https://deploy-preview-${{ github.event.pull_request.number }}--sunny-cactus-210e3e.netlify.app/${{ github.event.inputs.preview_page }}"
            fi
            
            # Add changed lecture pages
            if [ ! -z "${{ steps.detect-changes.outputs.changed_files }}" ]; then
              deploy_message="${deploy_message}\n\n📚 Changed Lecture Pages:"
              deploy_message="${deploy_message}\n${{ steps.detect-changes.outputs.preview_urls }}"
            fi
            
            netlify deploy \
              --dir _build/html/ \
              --site ${{ secrets.NETLIFY_SITE_ID }} \
              --auth ${{ secrets.NETLIFY_AUTH_TOKEN }} \
              --context deploy-preview \
              --message "${deploy_message}" \
              --json
              
            echo "✅ Deployment completed!"
            echo "🌐 Preview URL: https://deploy-preview-${{ github.event.pull_request.number }}--sunny-cactus-210e3e.netlify.app/"
            
            # Display preview URLs for changed files
            if [ ! -z "${{ steps.detect-changes.outputs.preview_urls }}" ]; then
              echo ""
              echo "📚 Direct links to changed lecture pages:"
              echo -e "${{ steps.detect-changes.outputs.preview_urls }}"
            fi
            
            # Display manual preview page if specified
            if [ ! -z "${{ github.event.inputs.preview_page }}" ]; then
              echo ""
              echo "🎯 Manual preview page: https://deploy-preview-${{ github.event.pull_request.number }}--sunny-cactus-210e3e.netlify.app/${{ github.event.inputs.preview_page }}"
            fi
          else
            # Handle manual deployment
            deploy_message="Manual Deploy from GitHub Actions (commit: ${{ github.sha }})"
            
            if [ ! -z "${{ github.event.inputs.preview_page }}" ]; then
              deploy_message="${deploy_message}\n\n🎯 Preview Page: https://manual-${{ github.run_id }}--sunny-cactus-210e3e.netlify.app/${{ github.event.inputs.preview_page }}"
            fi
            
            netlify deploy \
              --dir _build/html/ \
              --site ${{ secrets.NETLIFY_SITE_ID }} \
              --auth ${{ secrets.NETLIFY_AUTH_TOKEN }} \
              --alias manual-${{ github.run_id }} \
              --context dev \
              --message "${deploy_message}" \
              --json
              
            echo "✅ Manual deployment completed!"
            echo "🌐 Preview URL: https://manual-${{ github.run_id }}--sunny-cactus-210e3e.netlify.app/"
            
            if [ ! -z "${{ github.event.inputs.preview_page }}" ]; then
              echo "🎯 Preview page: https://manual-${{ github.run_id }}--sunny-cactus-210e3e.netlify.app/${{ github.event.inputs.preview_page }}"
            fi
          fi
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
      - name: Post PR Comment with Preview Links
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const changedFiles = `${{ steps.detect-changes.outputs.changed_files }}`;
            const previewUrls = `${{ steps.detect-changes.outputs.preview_urls }}`;
            const manualPage = `${{ github.event.inputs.preview_page }}`;
            const prNumber = ${{ github.event.pull_request.number }};
            const baseUrl = `https://deploy-preview-${prNumber}--sunny-cactus-210e3e.netlify.app`;
            
            let comment = `## 📖 Netlify Preview Ready!\n\n`;
            comment += `**Preview URL:** ${baseUrl}\n\n`;
            
            // Add manual preview page if specified
            if (manualPage) {
              comment += `🎯 **Manual Preview:** [${manualPage}](${baseUrl}/${manualPage})\n\n`;
            }
            
            // Add direct links to changed lecture pages
            if (changedFiles && previewUrls) {
              comment += `📚 **Changed Lecture Pages:**\n`;
              const files = changedFiles.split('\n').filter(f => f.trim());
              const urls = previewUrls.split('\n').filter(u => u.trim());
              
              for (let i = 0; i < files.length && i < urls.length; i++) {
                const fileName = files[i].replace('lectures/', '').replace('.md', '');
                const url = urls[i].trim();
                if (url) {
                  comment += `- [${fileName}](${url})\n`;
                }
              }
            }
            
            // Post the comment
            await github.rest.issues.createComment({
              issue_number: prNumber,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
